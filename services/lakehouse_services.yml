
x-common-log-config: &default_config
  networks:
    - ice_lakehouse

x-common-healthcheck-default: &default_healthcheck
  timeout: 45s
  interval: 10s
  retries: 10
  start_period: 10s


services:

  notebook:
    build: ../docker/notebook
    container_name: notebook
    <<: *default_config
    env_file:
      - ./conf/.notebook.conf
    volumes:
      - ../mnt/warehouse:/app/warehouse
      - ../mnt/notebooks:/app/notebooks
      - ../mnt/datasets:/app/datasets
    ports:
      - 8888:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001
    environment:
      NESSIE_URI: http://nessie:19120/api/v1
      MINIO_HOST: http://minio:9000



  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-44Z
    container_name: minio
    env_file:
      - ./conf/.minio.conf
    <<: *default_config
    volumes:
      - minio_dev_vol:/data
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]


  postgres_nessie:
    build: ../docker/postgres/
    container_name: postgres_nessie
    environment:
      POSTGRES_USER: nessie
      POSTGRES_PASSWORD: nessie
      POSTGRES_DB: nessie
    volumes:
      - pg_nessie_dev_vol:/var/lib/postgresql/data
    <<: *default_config


  nessie:
    image: bitnami/nessie:0.99.0
    container_name: nessie
    restart: always
    <<: *default_config
    environment:
      - NESSIE_VERSION_STORE_TYPE=JDBC
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres_nessie:5432/nessie
      - QUARKUS_DATASOURCE_USERNAME=nessie
      - QUARKUS_DATASOURCE_PASSWORD=nessie
    ports:
      - 19120:19120
    depends_on:
      - postgres_nessie

  dremio:
    image: dremio/dremio-oss:24.1
    ports:
      - 9047:9047
      # - 31010:31010
      # - 32010:32010
    container_name: dremio
    volumes:
      - dremio_dev_vol:/opt/dremio/data
    <<: *default_config

  ################################################################################################################
  #####################################    SPARK SERVICES    #####################################################

  spark-master:
    build: ../docker/spark
    container_name: spark-master
    <<: *default_config
    env_file:
      - ./conf/.notebook.conf
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_METRICS_MASTER_ENABLED=true
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '18080:8080'
    healthcheck:
      test: [ "CMD", "ls" ]
      <<: *default_healthcheck

  spark-worker:
    build: ../docker/spark
    <<: *default_config
    container_name: spark-worker
    env_file:
      - ./conf/.notebook.conf
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=4
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    healthcheck:
      test: [ "CMD", "ls" ]
      <<: *default_healthcheck

volumes:
  minio_dev_vol:
  dremio_dev_vol:
  pg_nessie_dev_vol:

networks:
  ice_lakehouse:
    name: ice_lakehouse